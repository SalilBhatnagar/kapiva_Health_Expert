{"layout/empty":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>{{ head.title }}</title>\r\n    {{{ head.meta_tags }}}\r\n    {{{ head.config }}}\r\n\r\n    <link href=\"{{ head.favicon }}\" rel=\"shortcut icon\">\r\n    {{#block \"head\"}}{{/block}}\r\n</head>\r\n<body>\r\n    {{#block \"page\"}}{{/block}}\r\n</body>\r\n</html>\r\n","pages/order-confirmation":"{{#partial \"head\"}}\r\n{{{ checkout.checkout_head }}}\r\n<style type=\"text/css\">\r\n  @font-face {\r\n    font-family: \"FoundersGrotesk\";\r\n    src: url(\"{{cdn 'assets/fonts/custom-fonts/Founders-Grotesk-Regular.woff2'}}\") format(\"woff2\"),\r\n    url(\"{{cdn 'assets/fonts/custom-fonts/Founders-Grotesk-Regular.woff'}}\") format(\"woff\"),\r\n    url(\"{{cdn 'assets/fonts/custom-fonts/Founders-Grotesk-Regular.otf'}}\") format(\"opentype\");\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-display: swap;\r\n\r\n  }\r\n\r\n  @font-face {\r\n    font-family: \"FoundersGrotesk-semibold\";\r\n    src: url(\"{{cdn 'assets/fonts/custom-fonts/Founders-Grotesk-Semibold.woff2'}}\") format(\"woff2\"),\r\n    url(\"{{cdn 'assets/fonts/custom-fonts/Founders-Grotesk-Semibold.woff'}}\") format(\"woff\"),\r\n    url(\"{{cdn 'assets/fonts/custom-fonts/Founders-Grotesk-Semibold.otf'}}\") format(\"opentype\");\r\n    font-weight: 500;\r\n    font-style: normal;\r\n    font-display: swap;\r\n\r\n  }\r\n\r\n  @font-face {\r\n    font-family: \"RecoletaAlt-SemiBold\";\r\n    src: url(\"{{cdn 'assets/fonts/custom-fonts/Recoleta-Alt-SemiBold.woff2'}}\") format(\"woff2\"),\r\n    url(\"{{cdn 'assets/fonts/custom-fonts/Recoleta-Alt-SemiBold.woff'}}\") format(\"woff\"),\r\n    url(\"{{cdn 'assets/fonts/custom-fonts/Recoleta-Alt-SemiBold.otf'}}\") format(\"opentype\");\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-display: swap;\r\n  }\r\n</style>\r\n{{{ stylesheet '/assets/css/optimized-checkout.css' }}}\r\n{{ getFontsCollection }}\r\n<!-- Global site tag (gtag.js) - Google Analytics -->\r\n<script type=\"text/javascript\">\r\n  window.language = {\r\n    {\r\n      {\r\n        langJson 'optimized_checkout'\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n{{{head.scripts}}}\r\n\r\n{{/partial}}\r\n\r\n{{#partial \"page\"}}\r\n<header class=\"checkoutHeader optimizedCheckout-header\">\r\n  <div class=\"checkoutHeader-content\">\r\n    <h1 class=\"is-srOnly\">{{lang 'checkout.title'}}</h1>\r\n    <h2 class=\"checkoutHeader-heading\">\r\n      <a class=\"checkoutHeader-link\" href=\"{{urls.home}}\">\r\n        {{#if checkout.header_image}}\r\n        <img alt=\"{{settings.store_logo.title}}\" class=\"checkoutHeader-logo\" id=\"logoImage\"\r\n          src=\"{{ checkout.header_image }}\" />\r\n        {{ else }}\r\n        <span class=\"header-logo-text\">{{settings.store_logo.title}}</span>\r\n        {{/if}}\r\n      </a>\r\n    </h2>\r\n  </div>\r\n</header>\r\n\r\n{{{ checkout.order_confirmation_content }}}\r\n\r\n{{{ footer.scripts }}}\r\n\r\n{{/partial}}\r\n\r\n{{> layout/empty}}\r\n<link preload rel=\"stylesheet\" href=\"{{cdn 'assets/scss/custom/slick.min.css'}}\" crossorigin=\"anonymous\"\r\n  referrerpolicy=\"no-referrer\" />\r\n\r\n<link preload rel=\"stylesheet\" href=\"{{cdn 'assets/scss/custom/owl.carousel.min.css'}}\">\r\n<link preload rel=\"stylesheet\" href=\"{{cdn 'assets/scss/custom/owl.theme.default.min.css'}}\">\r\n<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"\r\n  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n<script defer=\"defer\" src=\"{{cdn 'assets/js/owl.carousel.min.js'}}\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\r\n<input type=\"hidden\" value=\"{{customer.id}}\" class=\"customer_id\">\r\n<script>\r\n  $(document).ready(function () {\r\n    var cat_id = cat_name = p_id = p_name = p_price = p_quantity = '';\r\n    var discounted_amount = '';\r\n    var Coupon_Code_Applied = '';\r\n    var Coupon_Code_Applied_Name = '';\r\n    var Coupon_Code_Applied_Amount = '';\r\n    var Purchase_Amount = '';\r\n    var Phone_Number = '';\r\n    var Email_Address = '';\r\n    var First_Name = '';\r\n    var Last_Name = '';\r\n    var Order_Address_City = Order_Address_Pin = Payment_Status = '';\r\n    var payment_method = [];\r\n    setInterval(function () {\r\n      if ($('[data-test=\"order-confirmation-order-status-text\"] span').length !== 0) {\r\n        $('[data-test=\"order-confirmation-order-status-text\"] span').replaceWith(\r\n          'You will receive an email with your purchase details shortly. Please also check your Spam folder.<br/>We will deliver your order soon! You can make the cash payment when it is delivered to you.<br/> In case of questions or concerns regarding the same, email us at <a target=\"_top\" href=\"mailto:info@kapiva.in\">info@kapiva.in</a> or call us at <a href=\"tel:8080177000\">+91-8080 177 000</a>.'\r\n          );\r\n      }\r\n    }, 1000);\r\n\r\n    fetch('/api/storefront/order/{{checkout.order.id}}', {\r\n        credentials: 'include'\r\n      })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (orderData) {\r\n\r\n        var order_id = orderData['orderId'];\r\n        user_email = orderData['billingAddress']['email'];\r\n        total_price = orderData['baseAmount'];\r\n        var products = [];\r\n\r\n        let transaction = {\r\n          'event': 'purchase',\r\n          'transactionId': orderData['orderId'],\r\n          'transactionTotal': orderData['orderAmount'],\r\n          'transactionTax': orderData['taxTotal'],\r\n          'transactionShipping': orderData['shippingCostTotal'],\r\n          'transactionProducts': []\r\n        };\r\n\r\n\r\n        for (var i = 0; i < orderData['lineItems']['physicalItems'].length; i++) {\r\n          var obj = {\r\n            \"orderedItemId\": orderData['lineItems']['physicalItems'][i]['productId'],\r\n            \"orderedItemSku\": orderData['lineItems']['physicalItems'][i]['sku'],\r\n            \"orderedItemPrice\": orderData['lineItems']['physicalItems'][i]['salePrice'],\r\n            \"orderedItemQuantity\": orderData['lineItems']['physicalItems'][i]['quantity'],\r\n            \"orderedItemGTIN\": \"None\"\r\n          };\r\n\r\n          products.push(obj);\r\n\r\n\r\n          // for transactions\r\n          let lineItem = {\r\n            'id': orderData['lineItems']['physicalItems'][i]['productId'],\r\n            'sku': orderData['lineItems']['physicalItems'][i]['sku'],\r\n            'name': orderData['lineItems']['physicalItems'][i]['name'],\r\n            'price': orderData['lineItems']['physicalItems'][i]['salePrice'],\r\n            'quantity': orderData['lineItems']['physicalItems'][i]['quantity']\r\n          }\r\n          transaction.transactionProducts.push(lineItem)\r\n        }\r\n        var selector = localStorage.getItem('oid');\r\n        if (selector != order_id) {\r\n          localStorage.removeItem('oid');\r\n          localStorage.setItem('oid', order_id);\r\n          window.dataLayer = window.dataLayer || [];\r\n          dataLayer.push({\r\n            orderedItems: products\r\n          });\r\n          dataLayer.push(transaction);\r\n        }\r\n        $.ajax({\r\n          type: \"POST\",\r\n          url: \"https://bg-sync-api-dev.kapiva.in/api/getorderdetails.php\",\r\n          async: false,\r\n          headers: {\r\n            oid: order_id\r\n          },\r\n          success: function (html) {\r\n            var paymentMethod = JSON.parse(html);\r\n            payment_method.push(paymentMethod.method);\r\n          },\r\n        });\r\n\r\n        if (orderData['coupons'].length > 0) {\r\n          Coupon_Code_Applied = \"true\";\r\n          Coupon_Code_Applied_Name = orderData['coupons'][0]['code'];\r\n          Coupon_Code_Applied_Amount = orderData['coupons'][0]['discountedAmount'];\r\n        } else {\r\n          Coupon_Code_Applied = \"false\";\r\n          Coupon_Code_Applied_Name = \"NULL\";\r\n          Coupon_Code_Applied_Amount = 0;\r\n        }\r\n        var ids = '';\r\n        Purchase_Amount = orderData['orderAmount'];\r\n        Phone_Number = Number(orderData['billingAddress']['phone']);\r\n        Email_Address = orderData['billingAddress']['email'];\r\n        First_Name = orderData['billingAddress']['firstName'];\r\n        Last_Name = orderData['billingAddress']['lastName'];\r\n        Order_Address_City = orderData['billingAddress']['city'];\r\n        Order_Address_Pin = orderData['billingAddress']['postalCode'];\r\n        Payment_Status = orderData['status'];\r\n        for (var i = 0; i < orderData['lineItems']['physicalItems'].length; i++) {\r\n\r\n          var alldata = orderData['lineItems']['physicalItems'][i];\r\n          var Product_Id = alldata['productId'];\r\n          var Product_Name = alldata['name'];\r\n          var Product_Price = alldata['salePrice'];\r\n          var Product_Quantity = alldata['quantity'];\r\n          if (p_id == '' && p_name == '' && p_price == '' && p_quantity == '') {\r\n            p_id = Product_Id.toString();\r\n            p_name = Product_Name;\r\n            p_price = Product_Price.toString();\r\n            p_quantity = Product_Quantity.toString();\r\n          } else {\r\n            p_id = p_id + ',' + Product_Id;\r\n            p_name = p_name + ',' + Product_Name;\r\n            p_price = p_price + ',' + Product_Price;\r\n            p_quantity = p_quantity + ',' + Product_Quantity;\r\n          }\r\n          if (ids == '') {\r\n            ids = Product_Id;\r\n          } else {\r\n            ids = ids + ',' + Product_Id;\r\n          }\r\n        }\r\n        var query = `query ExtendedProductsById {\r\n          site {\r\n            products(entityIds: [` + ids + `]) {\r\n              edges {\r\n                node {\r\n                  id\r\n                  entityId\r\n                  name\r\n                  inventory{\r\n                  isInStock \r\n                  aggregated{\r\n                    availableToSell\r\n                    warningLevel\r\n                  }\r\n                }\r\n                  categories\r\n                  {\r\n                  edges\r\n                    {\r\n                      node\r\n                      {\r\n                        id\r\n                        name\r\n                        \r\n                      }\r\n                    } \r\n                  }\r\n                  \r\n                  prices (includeTax:true){\r\n                    price {\r\n                      ...MoneyFields\r\n                    }\r\n                    priceRange {\r\n                      min {\r\n                        ...MoneyFields\r\n                      }\r\n                      max {\r\n                        ...MoneyFields\r\n                      }\r\n                    }\r\n                    salePrice {\r\n                      ...MoneyFields\r\n                    }\r\n                    retailPrice {\r\n                      ...MoneyFields\r\n                    }\r\n                    saved {\r\n                      ...MoneyFields\r\n                    }\r\n                    bulkPricing {\r\n                      minimumQuantity\r\n                      maximumQuantity\r\n                      ... on BulkPricingFixedPriceDiscount {\r\n                        price\r\n                      }\r\n                      ... on BulkPricingPercentageDiscount {\r\n                        percentOff\r\n                      }\r\n                      ... on BulkPricingRelativePriceDiscount {\r\n                        priceAdjustment\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        fragment MoneyFields on Money {\r\n              value\r\n              currencyCode\r\n            }`;\r\n        $.ajax({\r\n          url: \"/graphql\",\r\n          contentType: \"application/json\",\r\n          type: 'POST',\r\n          async: false,\r\n          headers: {\r\n            'Authorization': 'Bearer {{ settings.storefront_api.token }}'\r\n          },\r\n          data: JSON.stringify({\r\n            query: query\r\n          }),\r\n          success: function (productsData) {\r\n            var getdata = productsData.data.site.products.edges;\r\n            $(getdata).each(function (index, value) {\r\n              var alldata = value.node;\r\n              if (alldata) {\r\n\r\n                if (alldata.prices.saved != null) {\r\n                  if (discounted_amount == '') {\r\n                    discounted_amount = alldata.prices.saved.value;\r\n                    discounted_amount = discounted_amount.toString();\r\n                  } else {\r\n                    discounted_amount = discounted_amount + ',' + alldata.prices.saved.value;\r\n                  }\r\n                } else {\r\n                  if (discounted_amount == '') {\r\n                    discounted_amount = 0;\r\n                    discounted_amount = discounted_amount.toString();\r\n                  } else {\r\n                    discounted_amount = discounted_amount + ',' + 0;\r\n                  }\r\n                }\r\n                var category = alldata.categories.edges;\r\n                var category_id = '';\r\n                var category_name = '';\r\n                $(category).each(function (index, value) {\r\n                  if (category_id == '' && category_name == '') {\r\n                    var cat_id = value.node.id;\r\n                    var splited_url = atob(cat_id);\r\n                    var categoryid = splited_url.split(\"Category:\");\r\n                    category_id = categoryid[1];\r\n                    category_name = value.node.name\r\n                  } else {\r\n                    var splited_url = atob(value.node.id);\r\n                    var categoryid = splited_url.split(\"Category:\");\r\n                    var catid = categoryid[1];\r\n                    category_id = category_id + ',' + catid;\r\n                    category_name = category_name + ',' + value.node.name;\r\n                  }\r\n\r\n                })\r\n                if (cat_id == '' && cat_name == '') {\r\n                  cat_id = category_id;\r\n                  cat_name = category_name;\r\n                } else {\r\n                  cat_id = cat_id + ',' + category_id;\r\n                  cat_name = cat_name + ',' + category_name;\r\n                }\r\n\r\n              }\r\n            });\r\n          },\r\n        });\r\n        webengage.track(\"Payment success\", {\r\n          \"Product_Id\": p_id,\r\n          \"Product_Name\": p_name,\r\n          \"Product_Price\": p_price,\r\n          \"Discounted_amount\": discounted_amount,\r\n          \"Product_Quantity\": p_quantity,\r\n          \"Purchase_Amount\": Purchase_Amount,\r\n          \"Phone_Number\": Phone_Number,\r\n          \"Email_Address\": Email_Address,\r\n          \"First_Name\": First_Name,\r\n          \"Last_Name\": Last_Name,\r\n          \"Cashback_Earned_Amount\": Coupon_Code_Applied_Amount,\r\n          \"Payment_Mode\": payment_method[0],\r\n          \"Payment_Status\": Payment_Status,\r\n          \"Coupon_Code_Applied\": Coupon_Code_Applied,\r\n          \"Coupon_Code_Applied_Name\": Coupon_Code_Applied_Name,\r\n          \"Coupon_Code_Applied_Amount\": Coupon_Code_Applied_Amount\r\n\r\n\r\n        });\r\n\r\n        webengage.track(\"Delivery_Details\", {\r\n          \"Product_Id\": p_id,\r\n          \"Product_Name\": p_name,\r\n          \"Category_ID\": cat_id,\r\n          \"Category_Name\": cat_name,\r\n          \"Price\": p_price,\r\n          \"Quantity\": p_quantity,\r\n          \"Cart_Amount\": Purchase_Amount,\r\n          \"Purchase_Amount\": Purchase_Amount,\r\n          \"Order_Address_City\": Order_Address_City,\r\n          \"Order_Address_Pin\": Order_Address_Pin,\r\n          \"Coupon_Code_Applied\": Coupon_Code_Applied,\r\n          \"Coupon_Code_Applied_Name\": Coupon_Code_Applied_Name,\r\n          \"Coupon_Code_Applied_Amount\": Coupon_Code_Applied_Amount\r\n\r\n        });\r\n      });\r\n\r\n\r\nlet u_id=document.getElementsByClassName(\"customer_id\")[0].value;\r\n       \r\n  });\r\n  CountAddToCart()\r\n\r\n  function CountAddToCart() {\r\n    var setinterval = setInterval(function () {\r\n      var len = document.getElementsByClassName(\"bag-icon\").length;\r\n      if (len > 0) {\r\n        clearInterval(setinterval);\r\n        fetch('/api/storefront/carts?include=', {\r\n          'credentials': 'include',\r\n          'headers': {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }).then(function (response) {\r\n          response.json().then(function (data) {\r\n            if (data.length != 0) {\r\n              var getid = data[0]['lineItems']['physicalItems'];\r\n\r\n              getid.forEach(function (value, key) {\r\n                var pid = value.productId;\r\n\r\n                var qty = value.quantity;\r\n                var bagIcon = document.getElementsByClassName(\"bag-icon\");\r\n                document.querySelectorAll('.bag-icon').forEach(item => {\r\n                  //  bagIcon.forEach(function (value,key) {\r\n\r\n                  var p_id = item.getAttribute(\"data-product-id\");\r\n                  if (p_id != undefined && p_id == pid && qty != null) {\r\n                    let el = item;\r\n    \r\n                    item.parentElement.querySelectorAll('#pro-count')[0].textContent = qty;\r\n                    item.parentElement.parentElement.parentElement.parentElement.classList.add(\r\n                      \"fill-Prod-add-to-cart\");\r\n                    item.parentElement.querySelectorAll('#pro-count')[0].classList.add(\r\n                    \"fill-count\");\r\n                  }\r\n\r\n                })\r\n              })\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }, 200)\r\n  }\r\n  var interval = setInterval(function () {\r\n    var len3 = document.querySelectorAll(\".browsing_history .productCarousel\").length;\r\n\r\n    //var len3 = document.querySelectorAll(\".Prod-AddToCart .buy-now.tranding_buy_now_add_to_cart\").length;\r\n\r\n    if (len3 > 0) {\r\n\r\n      clearInterval(interval);\r\n      //buynow trending products\r\n      document.querySelectorAll('.Prod-AddToCart .buy-now.tranding_buy_now_add_to_cart').forEach(item => {\r\n        item.addEventListener('click', function (event) {\r\n          event.preventDefault();\r\n\r\n          var discount = this.parentElement.parentElement.parentElement.querySelectorAll(\r\n            \".card-figure .card-figure__link .tag-section .groupBox .saleSavingTag\")[0].textContent;\r\n          let discount_pr = discount.trim();\r\n          var pro_id = this.getAttribute(\"data-product-id\");\r\n          if (this.classList.contains('disabled') == false) {\r\n            var cart_quantity = localStorage.getItem('cart-quantity');\r\n\r\n\r\n            axios({\r\n              url: '/remote/v1/cart/add',\r\n              method: 'post',\r\n              dataType: 'json',\r\n              data: {\r\n                action: 'add',\r\n                \"product_id\": pro_id,\r\n                \"qty[]\": 1\r\n              }\r\n            }).then((result) => {\r\n              if (result.data.data.cart_item) {\r\n                buyNow(pro_id, discount_pr)\r\n                window.location.href = '/checkout';\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n      //end buynow trending products\r\n\r\n      //addtocart trending product\r\n      document.querySelectorAll('#trand-card-addtocart-button').forEach(item => {\r\n        item.addEventListener('click', function (value, index) {\r\n\r\n          value.preventDefault();\r\n          var pro_id = this.getAttribute(\"data-product-id\");\r\n          var discount = this.parentElement.parentElement.parentElement.parentElement.parentElement\r\n            .parentElement.parentElement.parentElement.querySelectorAll(\r\n              \".card-figure .card-figure__link .tag-section .groupBox .saleSavingTag\")[0].textContent;\r\n          let discount_pr = discount.trim();\r\n          var cart_quantity = localStorage.getItem('cart-quantity');\r\n\r\n          axios({\r\n            url: '/remote/v1/cart/add',\r\n            method: 'post',\r\n            dataType: 'json',\r\n            data: {\r\n              action: 'add',\r\n              \"product_id\": pro_id,\r\n              \"qty[]\": 1\r\n            }\r\n          }).then((result) => {\r\n            if (result.data.data.cart_item) {\r\n\r\n            }\r\n            fetch('/api/storefront/carts?include=', {\r\n              'credentials': 'include',\r\n              'headers': {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }).then(function (response) {\r\n              response.json().then(function (data) {\r\n                if (data.length != 0) {\r\n                  var getid = data[0]['lineItems']['physicalItems'];\r\n                  getid.forEach(function (value, key) {\r\n                    var pid = value.productId;\r\n\r\n                    var qty = value.quantity;\r\n\r\n                    if (pro_id != undefined && pro_id == pid) {\r\n                      let tranding = document.getElementsByClassName(\"tranding_\" + pid)[0];\r\n                      tranding.parentElement.querySelectorAll('#pro-count')[0].textContent =\r\n                        qty;\r\n                      tranding.parentElement.parentElement.parentElement.parentElement\r\n                        .classList.add(\"fill-Prod-add-to-cart\");\r\n                      tranding.parentElement.querySelectorAll('#pro-count')[0].classList\r\n                        .add(\"fill-count\");\r\n\r\n                    }\r\n\r\n                  });\r\n                  addToCart(pro_id, discount_pr)\r\n                }\r\n              });\r\n            });\r\n\r\n          });\r\n        });\r\n      });\r\n      //end addtocart trending product\r\n    }\r\n  }, 1000);\r\n\r\n  function addToCart(pro_id, discount_pr) {\r\n\r\n    var p_id = '';\r\n    var p_name = '';\r\n    var mrp = '';\r\n    var discounted_price = '';\r\n    var Quantity = '';\r\n    var total_item_in_cart = '';\r\n    var cart_value = '';\r\n\r\n    fetch('/api/storefront/carts?productId=' + pro_id, {\r\n      'credentials': 'include',\r\n      'headers': {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(function (response) {\r\n      response.json().then(function (data) {\r\n        if (data) {\r\n          cart_value = data[0].cartAmount;\r\n          var getquantity = data[0]['lineItems']['physicalItems'];\r\n          getquantity.forEach(function (value, key) {\r\n            if (value.productId == pro_id) {\r\n              Quantity = value.quantity;\r\n            }\r\n            if (total_item_in_cart == '') {\r\n              total_item_in_cart = value.quantity;\r\n            } else {\r\n              total_item_in_cart = total_item_in_cart + value.quantity;\r\n            }\r\n\r\n          })\r\n        }\r\n\r\n\r\n\r\n        var query = `query productById{\r\n                       site {\r\n                         product(entityId: ` + pro_id + `) {\r\n                           id\r\n                           entityId\r\n                           name\r\n                           categories\r\n                           {\r\n                           edges\r\n                             {\r\n                               node\r\n                               {\r\n                                 id\r\n                                 name\r\n                                 \r\n                               }\r\n                             } \r\n                           }\r\n                           prices (includeTax:true){\r\n                             price {\r\n                               ...MoneyFields\r\n                             }\r\n                             \r\n                             salePrice {\r\n                               ...MoneyFields\r\n                             }\r\n                             retailPrice {\r\n                               ...MoneyFields\r\n                             }\r\n                            \r\n                           }\r\n                         }\r\n                       }\r\n                     }\r\n   \r\n                     fragment MoneyFields on Money {\r\n                       value\r\n                       currencyCode\r\n                     }`;\r\n        axios({\r\n          url: '/graphql',\r\n          method: 'post',\r\n          contentType: \"application/json\",\r\n          headers: {\r\n            'Authorization': 'Bearer {{ settings.storefront_api.token }}'\r\n          },\r\n          data: {\r\n            query: query\r\n          }\r\n        }).then((result) => {\r\n          var alldata = result.data.data.site.product;\r\n\r\n          if (alldata != null) {\r\n            p_id = alldata.entityId;\r\n\r\n            p_name = alldata.name;\r\n            if (alldata.prices.retailPrice != null) {\r\n              mrp = alldata.prices.retailPrice.value;\r\n            }\r\n            if (alldata.prices.salePrice != null) {\r\n              discounted_price = alldata.prices.salePrice.value;\r\n            } else {\r\n              discounted_price = 0;\r\n            }\r\n\r\n            var category = alldata.categories.edges;\r\n            var category_ID = [];\r\n            var category_NAME = [];\r\n            category.forEach(function (value, index) {\r\n              category_ID.push(value.node.id);\r\n              category_NAME.push(value.node.name);\r\n\r\n            })\r\n            var categories = {\r\n              category_ID,\r\n              category_NAME\r\n            };\r\n            var category_id = '';\r\n            var category_name = '';\r\n            category.forEach(function (value, index) {\r\n              if (category_id == '' && category_name == '') {\r\n                var cat_id = value.node.id;\r\n                var splited_url = atob(cat_id);\r\n                var categoryid = splited_url.split(\"Category:\");\r\n                category_id = categoryid[1];\r\n                category_name = value.node.name\r\n              } else {\r\n                var splited_url = atob(value.node.id);\r\n                var categoryid = splited_url.split(\"Category:\");\r\n                var catid = categoryid[1];\r\n                category_id = category_id + ',' + catid;\r\n                category_name = category_name + ',' + value.node.name;\r\n              }\r\n\r\n            })\r\n\r\n            webengage.track(\"add to cart\", {\r\n              \"Product_ID\": p_id,\r\n              \"Product_Name\": p_name,\r\n              \"Category_ID\": category_id,\r\n              \"Category_Name\": category_name,\r\n              \"MRP\": mrp,\r\n              \"Discount\": discount_pr,\r\n              \"Discount_Price\": discounted_price,\r\n              \"Quantity\": Quantity,\r\n              \"Total_Item_in_cart\": total_item_in_cart,\r\n              \"Cart_value\": cart_value\r\n            });\r\n            var productObject = {\r\n              \"Product_ID\": p_id,\r\n              \"Product_Name\": p_name,\r\n              \"categories\": categories,\r\n              \"price\": mrp,\r\n              \"salePrice\": discounted_price,\r\n              \"Quantity\": Quantity\r\n            };\r\n\r\n            dataLayer.push({\r\n              ecommerce: null\r\n            }); // Clear the previous ecommerce object.\r\n            dataLayer.push({\r\n              'event': 'addToCart',\r\n              'ecommerce': {\r\n                'currencyCode': 'INR',\r\n                'add': { // 'add' actionFieldObject measures.\r\n                  'products': [{ //  adding a product to a shopping cart.\r\n                    'name': p_name,\r\n                    'id': p_id,\r\n                    'price': discounted_price,\r\n                    'brand': 'Kapiva',\r\n                    'quantity': Quantity\r\n                  }]\r\n                }\r\n              }\r\n            });\r\n            window.dataLayer = window.dataLayer || [];\r\n            window.dataLayer.push({\r\n              addToCartProduct: productObject\r\n            });\r\n\r\n            fbq('track', 'AddToCart', {\r\n              content_ids: p_id,\r\n              content_type: 'product',\r\n              value: discounted_price,\r\n              currency: 'INR',\r\n              quantity: Quantity\r\n            });\r\n\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  function buyNow(pro_id, discount_pr) {\r\n    var p_id = '';\r\n    var p_name = '';\r\n    var mrp = '';\r\n    var discounted_price = '';\r\n    var Quantity = '';\r\n    var total_item_in_cart = '';\r\n    var cart_value = '';\r\n\r\n    fetch('/api/storefront/carts?productId=' + pro_id, {\r\n      'credentials': 'include',\r\n      'headers': {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(function (response) {\r\n      response.json().then(function (data) {\r\n        if (data) {\r\n\r\n          cart_value = data[0].cartAmount;\r\n          var getquantity = data[0]['lineItems']['physicalItems'];\r\n          getquantity.forEach(function (value, index) {\r\n            if (value.productId == pro_id) {\r\n              Quantity = value.quantity;\r\n            }\r\n            if (total_item_in_cart == '') {\r\n              total_item_in_cart = value.quantity;\r\n            } else {\r\n              total_item_in_cart = total_item_in_cart + value.quantity;\r\n            }\r\n\r\n          })\r\n        }\r\n        var query = `query productById{\r\n                        site {\r\n                          product(entityId: ` + pro_id + `) {\r\n                            id\r\n                            entityId\r\n                            name\r\n                            categories\r\n                            {\r\n                            edges\r\n                              {\r\n                                node\r\n                                {\r\n                                  id\r\n                                  name\r\n                                  \r\n                                }\r\n                              } \r\n                            }\r\n                            prices (includeTax:true){\r\n                              price {\r\n                                ...MoneyFields\r\n                              }\r\n                              salePrice {\r\n                                ...MoneyFields\r\n                              }\r\n                              retailPrice {\r\n                                ...MoneyFields\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n    \r\n                      fragment MoneyFields on Money {\r\n                        value\r\n                        currencyCode\r\n                      }`;\r\n        axios({\r\n          url: '/graphql',\r\n          method: 'post',\r\n          contentType: \"application/json\",\r\n          headers: {\r\n            'Authorization': 'Bearer {{ settings.storefront_api.token }}'\r\n          },\r\n          data: {\r\n            query: query\r\n          }\r\n        }).then((result) => {\r\n          var alldata = result.data.data.site.product;\r\n          if (alldata != null) {\r\n            p_id = alldata.entityId;\r\n\r\n            p_name = alldata.name;\r\n            if (alldata.prices.retailPrice != null) {\r\n              mrp = alldata.prices.retailPrice.value;\r\n            }\r\n            if (alldata.prices.salePrice != null) {\r\n              discounted_price = alldata.prices.salePrice.value;\r\n            } else {\r\n              discounted_price = 0;\r\n            }\r\n\r\n            var category = alldata.categories.edges;\r\n            var category_ID = [];\r\n            var category_NAME = [];\r\n            category.forEach(function (value, index) {\r\n\r\n              category_ID.push(value.node.id);\r\n              category_NAME.push(value.node.name);\r\n\r\n            })\r\n            var categories = {\r\n              category_ID,\r\n              category_NAME\r\n            };\r\n            var category_id = '';\r\n            var category_name = '';\r\n            category.forEach(function (value, index) {\r\n              if (category_id == '' && category_name == '') {\r\n                var cat_id = value.node.id;\r\n                var splited_url = atob(cat_id);\r\n                var categoryid = splited_url.split(\"Category:\");\r\n                category_id = categoryid[1];\r\n                category_name = value.node.name\r\n              } else {\r\n                var splited_url = atob(value.node.id);\r\n                var categoryid = splited_url.split(\"Category:\");\r\n                var catid = categoryid[1];\r\n                category_id = category_id + ',' + catid;\r\n                category_name = category_name + ',' + value.node.name;\r\n              }\r\n\r\n            })\r\n\r\n            webengage.track(\"buy now\", {\r\n              \"Product_ID\": p_id,\r\n              \"Product_Name\": p_name,\r\n              \"Category_ID\": category_id,\r\n              \"Category_Name\": category_name,\r\n              \"MRP\": mrp,\r\n              \"Discount\": discount_pr,\r\n              \"Discount_Price\": discounted_price,\r\n              \"Quantity\": Quantity,\r\n              \"Total_Item_in_cart\": total_item_in_cart,\r\n              \"Cart_value\": cart_value\r\n            });\r\n\r\n            var productObject = {\r\n              \"Product_ID\": p_id,\r\n              \"Product_Name\": p_name,\r\n              \"categories\": categories,\r\n              \"price\": mrp,\r\n              \"salePrice\": discounted_price,\r\n              \"Quantity\": Quantity\r\n            };\r\n\r\n            dataLayer.push({\r\n              ecommerce: null\r\n            }); // Clear the previous ecommerce object.\r\n            dataLayer.push({\r\n              'event': 'buyNow',\r\n              'ecommerce': {\r\n                'currencyCode': 'INR',\r\n                'add': { // 'add' actionFieldObject measures.\r\n                  'products': [{ //  adding a product to a shopping cart.\r\n                    'name': p_name,\r\n                    'id': p_id,\r\n                    'price': discounted_price,\r\n                    'brand': 'Kapiva',\r\n                    'quantity': Quantity\r\n                  }]\r\n                }\r\n              }\r\n            });\r\n            window.dataLayer = window.dataLayer || [];\r\n            window.dataLayer.push({\r\n              buyNowProduct: productObject\r\n            });\r\n            fbq('track', 'buyNow', {\r\n              content_ids: p_id,\r\n              content_type: 'product',\r\n              value: discounted_price,\r\n              currency: 'INR',\r\n              quantity: Quantity\r\n            });\r\n            window.location.href = '/checkout';\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n          \r\n</script>\r\n"}
